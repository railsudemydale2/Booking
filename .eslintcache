[{"/Users/dalestewart/Desktop/udemy/booking/client/src/index.js":"1","/Users/dalestewart/Desktop/udemy/booking/client/src/reportWebVitals.js":"2","/Users/dalestewart/Desktop/udemy/booking/client/src/App.js":"3","/Users/dalestewart/Desktop/udemy/booking/client/src/reducers/index.js":"4","/Users/dalestewart/Desktop/udemy/booking/client/src/booking/Home.js":"5","/Users/dalestewart/Desktop/udemy/booking/client/src/components/TopNav.js":"6","/Users/dalestewart/Desktop/udemy/booking/client/src/auth/Login.js":"7","/Users/dalestewart/Desktop/udemy/booking/client/src/auth/Register.js":"8","/Users/dalestewart/Desktop/udemy/booking/client/src/user/DashboardSeller.js":"9","/Users/dalestewart/Desktop/udemy/booking/client/src/components/PrivateRoute.js":"10","/Users/dalestewart/Desktop/udemy/booking/client/src/user/Dashboard.js":"11","/Users/dalestewart/Desktop/udemy/booking/client/src/reducers/auth.js":"12","/Users/dalestewart/Desktop/udemy/booking/client/src/components/RegisterForm.js":"13","/Users/dalestewart/Desktop/udemy/booking/client/src/components/DashboardNav.js":"14","/Users/dalestewart/Desktop/udemy/booking/client/src/components/LoginForm.js":"15","/Users/dalestewart/Desktop/udemy/booking/client/src/actions/auth.js":"16","/Users/dalestewart/Desktop/udemy/booking/client/src/components/ConnectNav.js":"17","/Users/dalestewart/Desktop/udemy/booking/client/src/hotels/NewHotel.js":"18","/Users/dalestewart/Desktop/udemy/booking/client/src/actions/stripe.js":"19","/Users/dalestewart/Desktop/udemy/booking/client/src/stripe/StripeCallback.js":"20","/Users/dalestewart/Desktop/udemy/booking/client/src/actions/hotel.js":"21","/Users/dalestewart/Desktop/udemy/booking/client/src/components/forms/HotelCreateForm.js":"22","/Users/dalestewart/Desktop/udemy/booking/client/src/components/cards/SmallCard.js":"23","/Users/dalestewart/Desktop/udemy/booking/client/src/hotels/EditHotel.js":"24","/Users/dalestewart/Desktop/udemy/booking/client/src/components/forms/HotelEditForm.js":"25","/Users/dalestewart/Desktop/udemy/booking/client/src/hotels/ViewHotel.js":"26","/Users/dalestewart/Desktop/udemy/booking/client/src/stripe/StripeSuccess.js":"27","/Users/dalestewart/Desktop/udemy/booking/client/src/stripe/StripeCancel.js":"28"},{"size":997,"mtime":1631924423207,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1631638780415,"results":"31","hashOfConfig":"30"},{"size":2133,"mtime":1632359552432,"results":"32","hashOfConfig":"30"},{"size":172,"mtime":1631924288267,"results":"33","hashOfConfig":"30"},{"size":745,"mtime":1632258616955,"results":"34","hashOfConfig":"30"},{"size":1136,"mtime":1631924218451,"results":"35","hashOfConfig":"30"},{"size":1701,"mtime":1631930765972,"results":"36","hashOfConfig":"30"},{"size":1396,"mtime":1631924060598,"results":"37","hashOfConfig":"30"},{"size":3628,"mtime":1632183279921,"results":"38","hashOfConfig":"30"},{"size":307,"mtime":1631924172976,"results":"39","hashOfConfig":"30"},{"size":1315,"mtime":1632368329582,"results":"40","hashOfConfig":"30"},{"size":406,"mtime":1631924271084,"results":"41","hashOfConfig":"30"},{"size":1188,"mtime":1631924199131,"results":"42","hashOfConfig":"30"},{"size":659,"mtime":1631924131317,"results":"43","hashOfConfig":"30"},{"size":871,"mtime":1631924154028,"results":"44","hashOfConfig":"30"},{"size":529,"mtime":1632010976779,"results":"45","hashOfConfig":"30"},{"size":2276,"mtime":1632019277960,"results":"46","hashOfConfig":"30"},{"size":6141,"mtime":1632143166695,"results":"47","hashOfConfig":"30"},{"size":1536,"mtime":1632260278706,"results":"48","hashOfConfig":"30"},{"size":1204,"mtime":1632001251415,"results":"49","hashOfConfig":"30"},{"size":1454,"mtime":1632367642805,"results":"50","hashOfConfig":"30"},{"size":2998,"mtime":1632140729047,"results":"51","hashOfConfig":"30"},{"size":2892,"mtime":1632344315844,"results":"52","hashOfConfig":"30"},{"size":2959,"mtime":1632237519975,"results":"53","hashOfConfig":"30"},{"size":3287,"mtime":1632234942604,"results":"54","hashOfConfig":"30"},{"size":2929,"mtime":1632357832318,"results":"55","hashOfConfig":"30"},{"size":1008,"mtime":1632365918599,"results":"56","hashOfConfig":"30"},{"size":262,"mtime":1632346145759,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1umxjh7",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/dalestewart/Desktop/udemy/booking/client/src/index.js",[],["126","127"],"/Users/dalestewart/Desktop/udemy/booking/client/src/reportWebVitals.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/App.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/reducers/index.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/booking/Home.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/components/TopNav.js",["128"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst TopNav = () => {\n  const dispatch = useDispatch();\n  const { auth } = useSelector((state) => ({ ...state }));\n  const history = useHistory();\n\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT',\n      payload: null,\n    });\n    window.localStorage.removeItem('auth');\n    history.push('/login');\n  };\n\n  return (\n    <div className=\"nav bg-light d-flex justify-content-between\">\n      <Link className=\"nav-link\" to=\"/\">\n        Home\n      </Link>\n\n      {auth !== null && (\n        <Link className=\"nav-link\" to=\"/dashboard\">\n          Dashboard\n        </Link>\n      )}\n\n      {auth !== null && (\n        <a className=\"nav-link pointer\" onClick={logout}>\n          Logout\n        </a>\n      )}\n\n      {auth === null && (\n        <>\n          <Link className=\"nav-link\" to=\"/login\">\n            Login\n          </Link>\n          <Link className=\"nav-link\" to=\"/register\">\n            Register\n          </Link>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TopNav;\n","/Users/dalestewart/Desktop/udemy/booking/client/src/auth/Login.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/auth/Register.js",["129"],"import { useState } from 'react';\nimport RegisterForm from '../components/RegisterForm';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { register } from '../actions/auth';\n\nconst Register = ({ history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await register({\n        name,\n        email,\n        password,\n      });\n      console.log('REGISTER USER ===> ', res);\n      toast.success('Register success. Please login.');\n      history.push('/login');\n    } catch (err) {\n      console.log(err);\n      if (err.response.status === 400) toast.error(err.response.data);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h1>Register</h1>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3\">\n            <RegisterForm\n              handleSubmit={handleSubmit}\n              name={name}\n              setName={setName}\n              email={email}\n              setEmail={setEmail}\n              password={password}\n              setPassword={setPassword}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","/Users/dalestewart/Desktop/udemy/booking/client/src/user/DashboardSeller.js",["130"],"import { useState, useEffect } from 'react';\nimport DashboardNav from '../components/DashboardNav';\nimport ConnectNav from '../components/ConnectNav';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { HomeOutlined } from '@ant-design/icons';\nimport { createConnectAccount } from '../actions/stripe';\nimport { sellerHotels, deleteHotel } from '../actions/hotel';\nimport { toast } from 'react-toastify';\nimport SmallCard from '../components/cards/SmallCard';\n\nconst DashboardSeller = () => {\n  const { auth } = useSelector((state) => ({ ...state }));\n  const [hotels, setHotels] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    loadSellersHotels();\n  }, []);\n\n  const loadSellersHotels = async () => {\n    let { data } = await sellerHotels(auth.token);\n    setHotels(data);\n  };\n\n  const handleClick = async () => {\n    setLoading(true);\n    try {\n      let res = await createConnectAccount(auth.token);\n      console.log(res); // get login link\n      window.location.href = res.data;\n    } catch (err) {\n      console.log(err);\n      toast.error('Stripe connect failed, Try again.');\n      setLoading(false);\n    }\n  };\n\n  const handleHotelDelete = async (hotelId) => {\n    //TODO: Implement the functionality to delete hotel client\n    if (!window.confirm('Are you sure that you want to delete the hotel?'))\n      return;\n    deleteHotel(auth.token, hotelId).then((res) => {\n      toast.success('Hotel Deleted');\n      loadSellersHotels();\n    });\n  };\n\n  const connected = () => (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-10\">\n          <h2>Your Hotels</h2>\n        </div>\n        <div className=\"col-md-2\">\n          <Link to=\"/hotels/new\" className=\"btn btn-primary\">\n            + Add New\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        {/* <pre>{JSON.stringify(hotels, null, 4)}</pre> */}\n        {hotels.map((h) => (\n          <SmallCard\n            key={h._id}\n            h={h}\n            showViewMoreButton={false}\n            owner={true}\n            handleHotelDelete={handleHotelDelete}\n          />\n        ))}\n      </div>\n    </div>\n  );\n\n  const notConnected = () => (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 text-center\">\n          <div className=\"p-5 pointer\">\n            <HomeOutlined className=\"h1\" />\n            <h4>Setup payouts to post hotel rooms</h4>\n            <p className=\"lead\">\n              MERN partners with stripe to transfer earnings to your bank\n              account\n            </p>\n            <button\n              disabled={loading}\n              onClick={handleClick}\n              className=\"btn btn-primary mb-3\"\n            >\n              {loading ? 'Processing...' : 'Setup Payouts'}\n            </button>\n            <p className=\"text-muted\">\n              <small>\n                You'll be redirected to Stripe to complete the onboarding\n                process.\n              </small>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5\">\n        <ConnectNav />\n      </div>\n\n      <div className=\"container-fluid p-4\">\n        <DashboardNav />\n      </div>\n\n      {auth &&\n      auth.user &&\n      auth.user.stripe_seller &&\n      auth.user.stripe_seller.charges_enabled\n        ? connected()\n        : notConnected()}\n\n      {/* <pre>{JSON.stringify(auth, null, 4)}</pre> */}\n    </>\n  );\n};\n\nexport default DashboardSeller;\n","/Users/dalestewart/Desktop/udemy/booking/client/src/components/PrivateRoute.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/user/Dashboard.js",["131"],"import DashboardNav from '../components/DashboardNav';\nimport ConnectNav from '../components/ConnectNav';\nimport { Link } from 'react-router-dom';\nimport { userHotelBookings } from '../actions/hotel';\nimport { useSelector } from 'react-redux';\nimport { useState, useEffect } from 'react';\n\nconst Dashboard = () => {\n  const {\n    auth: { token },\n  } = useSelector((state) => ({ ...state }));\n  const [booking, setBooking] = useState([]);\n\n  useEffect(() => {\n    loadUserBookings();\n  }, []);\n\n  const loadUserBookings = async () => {\n    const res = await userHotelBookings(token);\n    console.log(res);\n    setBooking(res.data);\n  };\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5\">\n        <ConnectNav />\n      </div>\n\n      <div className=\"container-fluid p-4\">\n        <DashboardNav />\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <h2>Your Bookings</h2>\n          </div>\n          <div className=\"col-md-2\">\n            <Link to=\"/\" className=\"btn btn-primary\">\n              Browse Hotels\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <pre>{JSON.stringify(booking, null, 4)}</pre>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","/Users/dalestewart/Desktop/udemy/booking/client/src/reducers/auth.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/components/RegisterForm.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/components/DashboardNav.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/components/LoginForm.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/actions/auth.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/components/ConnectNav.js",["132","133"],"import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Avatar, Badge } from 'antd';\nimport moment from 'moment';\nimport {\n  getAccountBalance,\n  currencyFormatter,\n  payoutSetting,\n} from '../actions/stripe';\nimport { SettingOutlined } from '@ant-design/icons';\nimport { toast } from 'react-toastify';\n\nconst { Meta } = Card;\nconst { Ribbon } = Badge;\n\nconst ConnectNav = () => {\n  const [loading, setLoading] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const { auth } = useSelector((state) => ({ ...state }));\n  const { user, token } = auth;\n\n  useEffect(() => {\n    getAccountBalance(auth.token).then((res) => {\n      // console.log(res);\n      setBalance(res.data);\n    });\n  }, []);\n\n  const handlePayoutSettings = async () => {\n    setLoading(true);\n    try {\n      const res = await payoutSetting(token);\n      // console.log('RESPONSE FOR PAYOUT SETTING LINK', res);\n      window.location.href = res.data.url;\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n      toast('Unable to access settings. Try again');\n    }\n  };\n\n  return (\n    <div className=\"d-flex justify-content-around\">\n      <Card>\n        <Meta\n          avatar={<Avatar>{user.name[0]}</Avatar>}\n          title={user.name}\n          description={`Joined ${moment(user.createdAt).fromNow()}`}\n        />\n      </Card>\n      {auth &&\n        auth.user &&\n        auth.user.stripe_seller &&\n        auth.user.stripe_seller.charges_enabled && (\n          <>\n            <Ribbon text=\"Available\" color=\"red\">\n              <Card className=\"bg-light pt-1\">\n                {balance &&\n                  balance.pending &&\n                  balance.pending.map((balancePending, i) => (\n                    <span key={i} className=\"lead\">\n                      {currencyFormatter(balancePending)}\n                    </span>\n                  ))}\n              </Card>\n            </Ribbon>\n            <Ribbon text=\"Payouts\" color=\"red\">\n              <Card onClick={handlePayoutSettings} className=\"bg-light pointer\">\n                <SettingOutlined className=\"h5 pt-2\" />\n              </Card>\n            </Ribbon>\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default ConnectNav;\n","/Users/dalestewart/Desktop/udemy/booking/client/src/hotels/NewHotel.js",["134","135","136","137","138","139"],"import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport AlgoliaPlaces from 'algolia-places-react';\nimport PlacesAutoComplete from 'react-places-autocomplete';\nimport { DatePicker, Select } from 'antd';\nimport moment from 'moment';\nimport { createHotel } from '../actions/hotel';\nimport { useSelector } from 'react-redux';\nimport HotelCreateForm from '../components/forms/HotelCreateForm';\n// import { mongoose } from 'mongoose';\n\nconst { Option } = Select;\n\nconst config = {\n  //appId: process.env.REACT_APP_ALGOLIA_APP_ID,\n  //apiKey: process.env.REACT_APP_ALGOLIA_API_KEY,\n  apiKey: process.env.REACT_APP_GOOGLEPLACES_API_KEY,\n\n  language: 'en',\n  // countries: [\"au\"],\n};\n\nconst NewHotel = () => {\n  // redux\n  const { auth } = useSelector((state) => ({ ...state }));\n  const { token } = auth;\n  // state\n  const [values, setValues] = useState({\n    title: '',\n    content: '',\n    image: '',\n    price: '',\n    from: '',\n    to: '',\n    bed: '',\n  });\n  const [preview, setPreview] = useState(\n    'https://via.placeholder.com/100x100.png?text=PREVIEW'\n  );\n  const [location, setLocation] = useState('');\n  // destructuring variables from state\n  const { title, content, image, price, from, to, bed } = values;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values);\n    console.log(location);\n\n    let hotelData = new FormData();\n    hotelData.append('title', title);\n    hotelData.append('content', content);\n    hotelData.append('location', location);\n    hotelData.append('price', price);\n    image && hotelData.append('image', image);\n    hotelData.append('from', from);\n    hotelData.append('to', to);\n    hotelData.append('bed', bed);\n\n    console.log([...hotelData]);\n\n    try {\n      let res = await createHotel(token, hotelData);\n      console.log('HOTEL CREATE RES', res);\n      toast.success('New hotel is posted');\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    // console.log(e.target.files[0]);\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setValues({ ...values, image: e.target.files[0] });\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  // const hotelForm = () => (\n  //   <form onSubmit={handleSubmit}>\n  //     <div className=\"form-group\">\n  //       <label className=\"btn btn-outline-secondary btn-block m-2 text-left\">\n  //         Image\n  //         <input\n  //           type=\"file\"\n  //           name=\"image\"\n  //           onChange={handleImageChange}\n  //           accept=\"image/*\"\n  //           hidden\n  //         />\n  //       </label>\n\n  //       <input\n  //         type=\"text\"\n  //         name=\"title\"\n  //         onChange={handleChange}\n  //         placeholder=\"Title\"\n  //         className=\"form-control m-2\"\n  //         value={title}\n  //       />\n\n  //       <textarea\n  //         name=\"content\"\n  //         onChange={handleChange}\n  //         placeholder=\"Content\"\n  //         className=\"form-control m-2\"\n  //         value={content}\n  //       />\n\n  //       <AlgoliaPlaces\n  //         className=\"form-control m-2\"\n  //         placeholder=\"Location\"\n  //         defaultValue={location}\n  //         options={config}\n  //         onChange={({ suggestion }) => setLocation(suggestion.value)}\n  //         style={{ height: '50px' }}\n  //       />\n\n  //       <input\n  //         type=\"number\"\n  //         name=\"price\"\n  //         onChange={handleChange}\n  //         placeholder=\"Price\"\n  //         className=\"form-control m-2\"\n  //         value={price}\n  //       />\n\n  //       {/* <input\n  //         type=\"number\"\n  //         name=\"bed\"\n  //         onChange={handleChange}\n  //         placeholder=\"Number of Beds\"\n  //         className=\"form-control m-2\"\n  //         value={bed}\n  //       /> */}\n\n  //       <Select\n  //         onChange={(value) => setValues({ ...values, bed: value })}\n  //         className=\"w-100 m-2\"\n  //         size=\"large\"\n  //         placeholder=\"Number of beds\"\n  //       >\n  //         <Option key={1}>{1}</Option>\n  //         <Option key={2}>{2}</Option>\n  //         <Option key={3}>{3}</Option>\n  //         <Option key={4}>{4}</Option>\n  //       </Select>\n  //     </div>\n\n  //     <DatePicker\n  //       placeholder=\"From date\"\n  //       className=\"form-control m-2\"\n  //       onChange={(date, dateString) =>\n  //         setValues({ ...values, from: dateString })\n  //       }\n  //       disabledDate={(current) =>\n  //         current && current.valueOf() < moment().subtract(1, 'days')\n  //       }\n  //     />\n\n  //     <DatePicker\n  //       placeholder=\"To date\"\n  //       className=\"form-control m-2\"\n  //       onChange={(date, dateString) =>\n  //         setValues({ ...values, to: dateString })\n  //       }\n  //       disabledDate={(current) =>\n  //         current && current.valueOf() < moment().subtract(1, 'days')\n  //       }\n  //     />\n\n  //     <button className=\"btn btn-outline-primary m-2\">Save</button>\n  //   </form>\n  // );\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h2>Add Hotel</h2>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <br />\n            {/* {hotelForm()} */}\n            <HotelCreateForm\n              values={values}\n              setValues={setValues}\n              handleChange={handleChange}\n              handleImageChange={handleImageChange}\n              handleSubmit={handleSubmit}\n              location={location}\n              setLocation={setLocation}\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <img\n              src={preview}\n              alt=\"preview_image\"\n              className=\"img img-fluid m-2\"\n            />\n            <pre>{JSON.stringify(values, null, 4)}</pre>\n            {JSON.stringify(location)}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NewHotel;\n","/Users/dalestewart/Desktop/udemy/booking/client/src/actions/stripe.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/stripe/StripeCallback.js",["140","141"],"import { useEffect, UseEffect } from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAccountStatus } from '../actions/stripe';\nimport { updateUserInLocalStorage } from '../actions/auth';\n\nconst StripeCallback = ({ history }) => {\n  const { auth } = useSelector((state) => ({ ...state }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (auth && auth.token) accountStatus();\n  }, [auth]);\n\n  const accountStatus = async () => {\n    try {\n      const res = await getAccountStatus(auth.token);\n      console.log('USER ACCOUNT STATUS ON STRIPE CALLBACK', res);\n      // update user in local storage\n      updateUserInLocalStorage(res.data, () => {\n        // update user in redux\n        dispatch({\n          type: 'LOGGED_IN_USER',\n          payload: res.data,\n        });\n        // redirect user to dashboard\n        window.location.href = '/dashboard/seller';\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <div className=\"d-flex justify-content-center p-5\">\n      <LoadingOutlined className=\"display-1 p-5 text-danger\" />\n    </div>\n  );\n};\n\nexport default StripeCallback;\n","/Users/dalestewart/Desktop/udemy/booking/client/src/actions/hotel.js",[],"/Users/dalestewart/Desktop/udemy/booking/client/src/components/forms/HotelCreateForm.js",["142"],"import AlgoliaPlaces from 'algolia-places-react';\nimport PlacesAutoComplete from 'react-places-autocomplete';\nimport { DatePicker, Select } from 'antd';\nimport moment from 'moment';\n\nconst { Option } = Select;\n\nconst config = {\n  //appId: process.env.REACT_APP_ALGOLIA_APP_ID,\n  //apiKey: process.env.REACT_APP_ALGOLIA_API_KEY,\n  apiKey: process.env.REACT_APP_GOOGLEPLACES_API_KEY,\n\n  language: 'en',\n  // countries: [\"au\"],\n};\n\nconst HotelCreateForm = (props) => {\n  const {\n    values,\n    setValues,\n    handleChange,\n    handleImageChange,\n    handleSubmit,\n    location,\n    setLocation,\n  } = props;\n  const { title, content, price } = values;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"btn btn-outline-secondary btn-block m-2 text-left\">\n          Image\n          <input\n            type=\"file\"\n            name=\"image\"\n            onChange={handleImageChange}\n            accept=\"image/*\"\n            hidden\n          />\n        </label>\n\n        <input\n          type=\"text\"\n          name=\"title\"\n          onChange={handleChange}\n          placeholder=\"Title\"\n          className=\"form-control m-2\"\n          value={title}\n        />\n\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          placeholder=\"Content\"\n          className=\"form-control m-2\"\n          value={content}\n        />\n\n        <AlgoliaPlaces\n          className=\"form-control m-2\"\n          placeholder=\"Location\"\n          defaultValue={location}\n          options={config}\n          onChange={({ suggestion }) => setLocation(suggestion.value)}\n          style={{ height: '50px' }}\n        />\n\n        <input\n          type=\"number\"\n          name=\"price\"\n          onChange={handleChange}\n          placeholder=\"Price\"\n          className=\"form-control m-2\"\n          value={price}\n        />\n\n        <Select\n          onChange={(value) => setValues({ ...values, bed: value })}\n          className=\"w-100 m-2\"\n          size=\"large\"\n          placeholder=\"Number of beds\"\n        >\n          <Option key={1}>{1}</Option>\n          <Option key={2}>{2}</Option>\n          <Option key={3}>{3}</Option>\n          <Option key={4}>{4}</Option>\n        </Select>\n      </div>\n\n      <DatePicker\n        placeholder=\"From date\"\n        className=\"form-control m-2\"\n        onChange={(date, dateString) =>\n          setValues({ ...values, from: dateString })\n        }\n        disabledDate={(current) =>\n          current && current.valueOf() < moment().subtract(1, 'days')\n        }\n      />\n\n      <DatePicker\n        placeholder=\"To date\"\n        className=\"form-control m-2\"\n        onChange={(date, dateString) =>\n          setValues({ ...values, to: dateString })\n        }\n        disabledDate={(current) =>\n          current && current.valueOf() < moment().subtract(1, 'days')\n        }\n      />\n\n      <button className=\"btn btn-outline-primary m-2\">Save</button>\n    </form>\n  );\n};\n\nexport default HotelCreateForm;\n","/Users/dalestewart/Desktop/udemy/booking/client/src/components/cards/SmallCard.js",["143","144"],"import { currencyFormatter } from '../../actions/stripe';\nimport { diffDays } from '../../actions/hotel';\nimport { useHistory, Link } from 'react-router-dom';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\n\nconst SmallCard = ({\n  h,\n  handleHotelDelete = (f) => f,\n  owner = false,\n  showViewMoreButton = true,\n}) => {\n  const history = useHistory();\n  return (\n    <>\n      <div className=\"card mb-3\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4\">\n            {h.image && h.image.contentType ? (\n              <img\n                src={`${process.env.REACT_APP_API}/hotel/image/${h._id}`}\n                alt=\"default hotel image\"\n                className=\"card-image img img-fluid\"\n              />\n            ) : (\n              <img\n                src=\"https://via.placeholder.com/900x500.png?text=MERN+Booking\"\n                alt=\"default hotel image\"\n                className=\"card-image img img-fluid\"\n              />\n            )}\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">\n                {h.title}\n                <span className=\"float-right text-primary\">\n                  {currencyFormatter({\n                    amount: h.price * 100,\n                    currency: 'cad',\n                  })}\n                </span>\n              </h3>\n              <p className=\"alert alert-info\">{h.location}</p>\n              <p className=\"card-text\">{`${h.content.substring(1, 200)}...`}</p>\n              <p className=\"card-text\">\n                <span className=\"float-right text-primary\">\n                  for {diffDays(h.from, h.to)}\n                  {''}\n                  {diffDays(h.from, h.to) <= 1 ? ' day' : 'days'}\n                </span>\n              </p>\n              <p className=\"card-text\">{h.bed} bed</p>\n              <p className=\"card-text\">\n                Available from {new Date(h.from).toLocaleDateString()}\n              </p>\n\n              <div className=\"d-flex justify-content-between h4\">\n                {showViewMoreButton && (\n                  <button\n                    onClick={() => history.push(`/hotel/${h._id}`)}\n                    className=\"btn btn-primary\"\n                  >\n                    Show more\n                  </button>\n                )}\n                {owner && (\n                  <>\n                    <Link to={`/hotel/edit/${h._id}`}>\n                      <EditOutlined className=\"text-warning\" />\n                    </Link>\n                    <DeleteOutlined\n                      onClick={() => handleHotelDelete(h._id)}\n                      className=\"text-danger\"\n                    />\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SmallCard;\n","/Users/dalestewart/Desktop/udemy/booking/client/src/hotels/EditHotel.js",["145","146","147"],"import { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { DatePicker, Select } from \"antd\";\nimport { read, updateHotel } from \"../actions/hotel\";\nimport { useSelector } from \"react-redux\";\nimport HotelEditForm from \"../components/forms/HotelEditForm\";\n\nconst { Option } = Select;\n\nconst EditHotel = ({ match }) => {\n  // redux\n  const { auth } = useSelector((state) => ({ ...state }));\n  const { token } = auth;\n  // state\n  const [values, setValues] = useState({\n    title: \"\",\n    content: \"\",\n    location: \"\",\n    price: \"\",\n    from: \"\",\n    to: \"\",\n    bed: \"\",\n  });\n  const [image, setImage] = useState(\"\");\n  const [preview, setPreview] = useState(\n    \"https://via.placeholder.com/100x100.png?text=PREVIEW\"\n  );\n  // destructuring variables from state\n  const { title, content, price, from, to, bed, location } = values;\n\n  useEffect(() => {\n    loadSellerHotel();\n  }, []);\n\n  const loadSellerHotel = async () => {\n    let res = await read(match.params.hotelId);\n    // console.log(res);\n    setValues({ ...values, ...res.data });\n    setPreview(`${process.env.REACT_APP_API}/hotel/image/${res.data._id}`);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let hotelData = new FormData();\n    hotelData.append(\"title\", title);\n    hotelData.append(\"content\", content);\n    hotelData.append(\"location\", location);\n    hotelData.append(\"price\", price);\n    image && hotelData.append(\"image\", image);\n    hotelData.append(\"from\", from);\n    hotelData.append(\"to\", to);\n    hotelData.append(\"bed\", bed);\n\n    try {\n      let res = await updateHotel(token, hotelData, match.params.hotelId);\n      console.log(\"HOTEL UPDATE RES\", res);\n      toast.success(`${res.data.title} is updated`);\n    } catch (err) {\n      console.log(err);\n      toast.error(err.response.data.err);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    // console.log(e.target.files[0]);\n    setPreview(URL.createObjectURL(e.target.files[0]));\n    setImage(e.target.files[0]);\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid bg-secondary p-5 text-center\">\n        <h2>Edit Hotel</h2>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <br />\n            <HotelEditForm\n              values={values}\n              setValues={setValues}\n              handleChange={handleChange}\n              handleImageChange={handleImageChange}\n              handleSubmit={handleSubmit}\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <img\n              src={preview}\n              alt=\"preview_image\"\n              className=\"img img-fluid m-2\"\n            />\n            <pre>{JSON.stringify(values, null, 4)}</pre>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditHotel;\n","/Users/dalestewart/Desktop/udemy/booking/client/src/components/forms/HotelEditForm.js",["148"],"import AlgoliaPlaces from 'algolia-places-react';\nimport PlacesAutoComplete from 'react-places-autocomplete';\nimport { DatePicker, Select } from \"antd\";\nimport moment from \"moment\";\n\nconst { Option } = Select;\n\nconst config = {\n//   appId: process.env.REACT_APP_ALGOLIA_APP_ID,\n//   apiKey: process.env.REACT_APP_ALGOLIA_API_KEY,\n  apiKey: process.env.REACT_APP_GOOGLEPLACES_API_KEY,\n  language: \"en\",\n  // countries: [\"ca\"],\n};\n\nconst HotelEditForm = ({\n  values,\n  setValues,\n  handleChange,\n  handleImageChange,\n  handleSubmit,\n}) => {\n  const { title, content, location, price, bed, from, to } = values;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"btn btn-outline-secondary btn-block m-2 text-left\">\n          Image\n          <input\n            type=\"file\"\n            name=\"image\"\n            onChange={handleImageChange}\n            accept=\"image/*\"\n            hidden\n          />\n        </label>\n\n        <input\n          type=\"text\"\n          name=\"title\"\n          onChange={handleChange}\n          placeholder=\"Title\"\n          className=\"form-control m-2\"\n          value={title}\n        />\n\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          placeholder=\"Content\"\n          className=\"form-control m-2\"\n          value={content}\n        />\n\n        {location && location.length && (\n          <AlgoliaPlaces\n            className=\"form-control m-2\"\n            placeholder=\"Location\"\n            defaultValue={location}\n            options={config}\n            onChange={({ suggestion }) =>\n              setValues({ ...values, location: suggestion.value })\n            }\n            style={{ height: \"50px\" }}\n          />\n        )}\n\n        <input\n          type=\"number\"\n          name=\"price\"\n          onChange={handleChange}\n          placeholder=\"Price\"\n          className=\"form-control m-2\"\n          value={price}\n        />\n\n        <Select\n          onChange={(value) => setValues({ ...values, bed: value })}\n          className=\"w-100 m-2\"\n          size=\"large\"\n          placeholder=\"Number of beds\"\n          value={bed}\n        >\n          <Option key={1}>{1}</Option>\n          <Option key={2}>{2}</Option>\n          <Option key={3}>{3}</Option>\n          <Option key={4}>{4}</Option>\n        </Select>\n      </div>\n\n      {from && (\n        <DatePicker\n          defaultValue={moment(from, \"YYYY-MM-DD\")}\n          placeholder=\"From date\"\n          className=\"form-control m-2\"\n          onChange={(date, dateString) =>\n            setValues({ ...values, from: dateString })\n          }\n          disabledDate={(current) =>\n            current && current.valueOf() < moment().subtract(1, \"days\")\n          }\n        />\n      )}\n\n      {to && (\n        <DatePicker\n          defaultValue={moment(to, \"YYYY-MM-DD\")}\n          placeholder=\"To date\"\n          className=\"form-control m-2\"\n          onChange={(date, dateString) =>\n            setValues({ ...values, to: dateString })\n          }\n          disabledDate={(current) =>\n            current && current.valueOf() < moment().subtract(1, \"days\")\n          }\n        />\n      )}\n\n      <button className=\"btn btn-outline-primary m-2\">Save</button>\n    </form>\n  );\n};\n\nexport default HotelEditForm;\n","/Users/dalestewart/Desktop/udemy/booking/client/src/hotels/ViewHotel.js",["149","150"],"/Users/dalestewart/Desktop/udemy/booking/client/src/stripe/StripeSuccess.js",["151","152"],"/Users/dalestewart/Desktop/udemy/booking/client/src/stripe/StripeCancel.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":32,"column":9,"nodeType":"159","endLine":32,"endColumn":58},{"ruleId":"160","severity":1,"message":"161","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":19,"column":6,"nodeType":"166","endLine":19,"endColumn":8,"suggestions":"167"},{"ruleId":"164","severity":1,"message":"168","line":16,"column":6,"nodeType":"166","endLine":16,"endColumn":8,"suggestions":"169"},{"ruleId":"160","severity":1,"message":"170","line":17,"column":10,"nodeType":"162","messageId":"163","endLine":17,"endColumn":17},{"ruleId":"164","severity":1,"message":"171","line":27,"column":6,"nodeType":"166","endLine":27,"endColumn":8,"suggestions":"172"},{"ruleId":"160","severity":1,"message":"173","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":21},{"ruleId":"160","severity":1,"message":"174","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":26},{"ruleId":"160","severity":1,"message":"175","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":20},{"ruleId":"160","severity":1,"message":"176","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":14},{"ruleId":"160","severity":1,"message":"177","line":12,"column":9,"nodeType":"162","messageId":"163","endLine":12,"endColumn":15},{"ruleId":"160","severity":1,"message":"178","line":14,"column":7,"nodeType":"162","messageId":"163","endLine":14,"endColumn":13},{"ruleId":"160","severity":1,"message":"179","line":1,"column":21,"nodeType":"162","messageId":"163","endLine":1,"endColumn":30},{"ruleId":"164","severity":1,"message":"180","line":13,"column":6,"nodeType":"166","endLine":13,"endColumn":12,"suggestions":"181"},{"ruleId":"160","severity":1,"message":"174","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":26},{"ruleId":"182","severity":1,"message":"183","line":19,"column":15,"nodeType":"159","endLine":23,"endColumn":17},{"ruleId":"182","severity":1,"message":"183","line":25,"column":15,"nodeType":"159","endLine":29,"endColumn":17},{"ruleId":"160","severity":1,"message":"175","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":20},{"ruleId":"160","severity":1,"message":"177","line":8,"column":9,"nodeType":"162","messageId":"163","endLine":8,"endColumn":15},{"ruleId":"164","severity":1,"message":"184","line":33,"column":6,"nodeType":"166","endLine":33,"endColumn":8,"suggestions":"185"},{"ruleId":"160","severity":1,"message":"174","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":26},{"ruleId":"160","severity":1,"message":"186","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":18},{"ruleId":"164","severity":1,"message":"184","line":18,"column":6,"nodeType":"166","endLine":18,"endColumn":8,"suggestions":"187"},{"ruleId":"160","severity":1,"message":"188","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"189","line":24,"column":6,"nodeType":"166","endLine":24,"endColumn":28,"suggestions":"190"},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadSellersHotels'. Either include it or remove the dependency array.","ArrayExpression",["193"],"React Hook useEffect has a missing dependency: 'loadUserBookings'. Either include it or remove the dependency array.",["194"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.",["195"],"'AlgoliaPlaces' is defined but never used.","'PlacesAutoComplete' is defined but never used.","'DatePicker' is defined but never used.","'moment' is defined but never used.","'Option' is assigned a value but never used.","'config' is assigned a value but never used.","'UseEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'accountStatus'. Either include it or remove the dependency array.",["196"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'loadSellerHotel'. Either include it or remove the dependency array.",["197"],"'useStore' is defined but never used.",["198"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [loadSellersHotels]",{"range":"213","text":"214"},"Update the dependencies array to be: [loadUserBookings]",{"range":"215","text":"216"},"Update the dependencies array to be: [auth.token]",{"range":"217","text":"218"},"Update the dependencies array to be: [accountStatus, auth]",{"range":"219","text":"220"},"Update the dependencies array to be: [loadSellerHotel]",{"range":"221","text":"222"},{"range":"223","text":"222"},"Update the dependencies array to be: [history, match.params.hotelId, token]",{"range":"224","text":"225"},[736,738],"[loadSellersHotels]",[489,491],"[loadUserBookings]",[752,754],"[auth.token]",[476,482],"[accountStatus, auth]",[916,918],"[loadSellerHotel]",[600,602],[753,775],"[history, match.params.hotelId, token]"]